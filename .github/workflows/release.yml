name: Build and Release on Version Change

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_changed.outputs.changed }}
      new_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch the last two commits
      - name: Get latest release version
        id: get_latest_release
        run: |
          LATEST_RELEASE_VERSION=$(curl --silent "https://api.github.com/repos/sonovice/flowscore/releases/latest" | jq -r .tag_name | tr -d 'v')
          echo "::set-output name=version::${LATEST_RELEASE_VERSION}"
        shell: bash
      - name: Check if version changed
        id: version_changed
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          if [ "$CURRENT_VERSION" != "${{ steps.get_latest_release.outputs.version }}" ]; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi
        shell: bash
      - name: Get current version
        id: get_version
        if: steps.version_changed.outputs.changed == 'true'
        run: echo "::set-output name=version::$(jq -r '.version' package.json)"
        shell: bash

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Bun
        run: |
          curl https://bun.sh/install | bash -s "bun-v1.1.20"
          echo "BUN_BIN=$(echo $HOME/.bun/bin)" >> $GITHUB_ENV
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Run setup
        run: |
          bun run setup
          cd src/ui
          bun run build
          cd ../..

      - name: Run build
        run: |
          bun build --compile --target=bun-mac-x64 --outfile FlowScoreApp-mac-x64 src/index.ts
          bun build --compile --target=bun-mac-arm64 --outfile FlowScoreApp-mac-arm64 src/index.ts
          bun build --compile --target=bun-linux-x64 --outfile FlowScoreApp-linux-x64 src/index.ts
          bun build --compile --target=bun-linux-amd64 --outfile FlowScoreApp-linux-arm64 src/index.ts
          bun build --compile --target=bun-windows-x64 --outfile FlowScoreApp-windows-x64.exe src/index.ts


      - name: Rename and upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: FlowScore-v${{ needs.check-version.outputs.new_version }}
          path: FlowScoreApp-*
          if-no-files-found: error
          retention-days: 1

  create-release:
    needs: [ check-version, build-and-release ]
    if: needs.build-and-release.result == 'success' && needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: FlowScore-v${{ needs.check-version.outputs.new_version }}
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.check-version.outputs.new_version }}"
          name: "FlowScore v${{ needs.check-version.outputs.new_version }}"
          draft: false
          prerelease: false
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}