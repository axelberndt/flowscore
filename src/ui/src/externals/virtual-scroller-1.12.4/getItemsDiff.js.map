{"version":3,"file":"getItemsDiff.js","names":["getItemsDiff","previousItems","newItems","isEqual","firstPreviousItemIndex","lastPreviousItemIndex","length","findInArray","arePreviousItemsPreserved","isIncrementalUpdate","prependedItemsCount","appendedItemsCount","offset","i","array","element"],"sources":["../source/getItemsDiff.js"],"sourcesContent":["/**\n * Checks whether it's an \"incremental\" items update, and returns the \"diff\".\n * @param  {any[]} previousItems\n * @param  {any[]} newItems\n * @return {object} [diff]\n */\nexport default function getItemsDiff(previousItems, newItems, isEqual) {\n\tlet firstPreviousItemIndex = -1\n\tlet lastPreviousItemIndex = -1\n\tif (previousItems.length > 0) {\n\t\tfirstPreviousItemIndex = findInArray(newItems, previousItems[0], isEqual)\n\t\tif (firstPreviousItemIndex >= 0) {\n\t\t\tif (arePreviousItemsPreserved(previousItems, newItems, firstPreviousItemIndex, isEqual)) {\n\t\t\t\tlastPreviousItemIndex = firstPreviousItemIndex + previousItems.length - 1\n\t\t\t}\n\t\t}\n\t}\n\tconst isIncrementalUpdate = firstPreviousItemIndex >= 0 && lastPreviousItemIndex >= 0\n\tif (isIncrementalUpdate) {\n\t\treturn {\n\t\t\tprependedItemsCount: firstPreviousItemIndex,\n\t\t\tappendedItemsCount: newItems.length - (lastPreviousItemIndex + 1)\n\t\t}\n\t}\n}\n\nfunction arePreviousItemsPreserved(previousItems, newItems, offset, isEqual) {\n\t// Check each item of the `previousItems` to determine\n\t// whether it's an \"incremental\" items update.\n\t// (an update when items are prepended or appended)\n\tlet i = 0\n\twhile (i < previousItems.length) {\n\t\tif (newItems.length <= offset + i ||\n\t\t\t!isEqual(newItems[offset + i], previousItems[i])) {\n\t\t\treturn false\n\t\t}\n\t\ti++\n\t}\n\treturn true\n}\n\nfunction findInArray(array, element, isEqual) {\n\tlet i = 0\n\twhile (i < array.length) {\n\t\tif (isEqual(array[i], element)) {\n\t\t\treturn i\n\t\t}\n\t\ti++\n\t}\n\treturn -1\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAT,CAAsBC,aAAtB,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;EACtE,IAAIC,sBAAsB,GAAG,CAAC,CAA9B;EACA,IAAIC,qBAAqB,GAAG,CAAC,CAA7B;;EACA,IAAIJ,aAAa,CAACK,MAAd,GAAuB,CAA3B,EAA8B;IAC7BF,sBAAsB,GAAGG,WAAW,CAACL,QAAD,EAAWD,aAAa,CAAC,CAAD,CAAxB,EAA6BE,OAA7B,CAApC;;IACA,IAAIC,sBAAsB,IAAI,CAA9B,EAAiC;MAChC,IAAII,yBAAyB,CAACP,aAAD,EAAgBC,QAAhB,EAA0BE,sBAA1B,EAAkDD,OAAlD,CAA7B,EAAyF;QACxFE,qBAAqB,GAAGD,sBAAsB,GAAGH,aAAa,CAACK,MAAvC,GAAgD,CAAxE;MACA;IACD;EACD;;EACD,IAAMG,mBAAmB,GAAGL,sBAAsB,IAAI,CAA1B,IAA+BC,qBAAqB,IAAI,CAApF;;EACA,IAAII,mBAAJ,EAAyB;IACxB,OAAO;MACNC,mBAAmB,EAAEN,sBADf;MAENO,kBAAkB,EAAET,QAAQ,CAACI,MAAT,IAAmBD,qBAAqB,GAAG,CAA3C;IAFd,CAAP;EAIA;AACD;;AAED,SAASG,yBAAT,CAAmCP,aAAnC,EAAkDC,QAAlD,EAA4DU,MAA5D,EAAoET,OAApE,EAA6E;EAC5E;EACA;EACA;EACA,IAAIU,CAAC,GAAG,CAAR;;EACA,OAAOA,CAAC,GAAGZ,aAAa,CAACK,MAAzB,EAAiC;IAChC,IAAIJ,QAAQ,CAACI,MAAT,IAAmBM,MAAM,GAAGC,CAA5B,IACH,CAACV,OAAO,CAACD,QAAQ,CAACU,MAAM,GAAGC,CAAV,CAAT,EAAuBZ,aAAa,CAACY,CAAD,CAApC,CADT,EACmD;MAClD,OAAO,KAAP;IACA;;IACDA,CAAC;EACD;;EACD,OAAO,IAAP;AACA;;AAED,SAASN,WAAT,CAAqBO,KAArB,EAA4BC,OAA5B,EAAqCZ,OAArC,EAA8C;EAC7C,IAAIU,CAAC,GAAG,CAAR;;EACA,OAAOA,CAAC,GAAGC,KAAK,CAACR,MAAjB,EAAyB;IACxB,IAAIH,OAAO,CAACW,KAAK,CAACD,CAAD,CAAN,EAAWE,OAAX,CAAX,EAAgC;MAC/B,OAAOF,CAAP;IACA;;IACDA,CAAC;EACD;;EACD,OAAO,CAAC,CAAR;AACA"}