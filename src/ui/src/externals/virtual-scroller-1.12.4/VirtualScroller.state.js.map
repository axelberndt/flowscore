{"version":3,"file":"VirtualScroller.state.js","names":["fillArray","log","warn","isDebug","reportError","cleanUpBeforeResizeState","getStateSnapshot","createStateHelpers","initialState","state","getInitialItemState","onStateChange","render","initialItems","items","_render","_setItemState","i","newItemState","JSON","stringify","getState","itemStates","newItemsWillBeRendered","itemStatesThatChangedWhileNewItemsWereBeingRendered","String","_getState","updateState","stateUpdate","_isSettingNewItems","undefined","waitingForRender","previousState","mostRecentSetStateValue","_setState","getInitialState","getRestoredState","call","getInitialStateFromScratch","useState","setState","_isActive","Error","_usesCustomStateStorage","newState","useDefaultStateStorage","defaultGetState","bind","defaultSetState","setInitialState","defaultSetInitialState","onRender","getInitialLayoutState","beforeStart","Array","length","firstShownItemIndex","lastShownItemIndex","verticalSpacing","isStateColumnsCountMismatch","columnsCount","getActualColumnsCount","itemsCount","getColumnsCount","layout","getInitialLayoutValueWithFallback","getInitialLayoutValues","beforeItemsHeight","afterItemsHeight","itemHeights","onBeforeShowItems","getActualColumnsCountForState","stateColumnsCount","Math","floor"],"sources":["../source/VirtualScroller.state.js"],"sourcesContent":["import fillArray from './utility/fillArray.js'\nimport log, { warn, isDebug, reportError } from './utility/debug.js'\nimport { cleanUpBeforeResizeState } from './BeforeResize.js'\nimport getStateSnapshot from './utility/getStateSnapshot.js'\n\n// There're three main places where state is updated:\n//\n// * On scroll.\n// * On window resize.\n// * On set new items.\n//\n// State updates may be \"asynchronous\" (like in React), in which case the\n// corresponding operation is \"pending\" until the state update is applied.\n//\n// If there's a \"pending\" window resize or a \"pending\" update of the set of items,\n// then \"on scroll\" updates aren't dispatched.\n//\n// If there's a \"pending\" on scroll update and the window is resize or a new set\n// of items is set, then that \"pending\" on scroll update gets overwritten.\n//\n// If there's a \"pending\" update of the set of items, then window resize handler\n// sees that \"pending\" update and dispatches its own state update so that the\n// \"pending\" state update originating from `setItems()` is not lost.\n//\n// If there's a \"pending\" window resize, and a new set of items is set,\n// then the state update of the window resize handler gets overwritten.\n\nexport default function createStateHelpers({\n\tstate: initialState,\n\tgetInitialItemState,\n\tonStateChange,\n\trender,\n\titems: initialItems\n}) {\n\tthis.onStateChange = onStateChange\n\tthis._render = render\n\n\tthis.getInitialItemState = getInitialItemState\n\n\tthis._setItemState = (i, newItemState) => {\n\t\tif (isDebug()) {\n\t\t\tlog('~ Item state changed ~')\n\t\t\tlog('Item index', i)\n\t\t\t// Uses `JSON.stringify()` here instead of just outputting the JSON objects as is\n\t\t\t// because outputting JSON objects as is would show different results later when\n\t\t\t// the developer inspects those in the web browser console if those state objects\n\t\t\t// get modified in between they've been output to the console and the developer\n\t\t\t// decided to inspect them.\n\t\t\tlog('Previous state' + '\\n' + JSON.stringify(this.getState().itemStates[i], null, 2))\n\t\t\tlog('New state' + '\\n' + JSON.stringify(newItemState, null, 2))\n\t\t}\n\n\t\tthis.getState().itemStates[i] = newItemState\n\n\t\t// If there was a request for `setState()` with new `items`, then the changes\n\t\t// to `currentState.itemStates[]` made above would be overwritten when that\n\t\t// pending `setState()` call gets applied.\n\t\t// To fix that, the updates to current `itemStates[]` are noted in\n\t\t// `this.itemStatesThatChangedWhileNewItemsWereBeingRendered` variable.\n\t\t// That variable is then checked when the `setState()` call with the new `items`\n\t\t// has been updated.\n\t\tif (this.newItemsWillBeRendered) {\n\t\t\tif (!this.itemStatesThatChangedWhileNewItemsWereBeingRendered) {\n\t\t\t\tthis.itemStatesThatChangedWhileNewItemsWereBeingRendered = {}\n\t\t\t}\n\t\t\tthis.itemStatesThatChangedWhileNewItemsWereBeingRendered[String(i)] = newItemState\n\t\t}\n\t}\n\n\tthis.getState = () => this._getState()\n\n\tthis.updateState = (stateUpdate) => {\n\t\tif (isDebug()) {\n\t\t\tlog('~ Set state ~')\n\t\t\tlog(getStateSnapshot(stateUpdate))\n\t\t}\n\n\t\t// Ensure that a non-initial `stateUpdate` can only contain an `items`\n\t\t// property when it comes from a `setItems()` call.\n\t\tif (stateUpdate.items) {\n\t\t\tif (!this._isSettingNewItems) {\n\t\t\t\treportError('A `stateUpdate` can only contain `items` property as a result of calling `.setItems()`')\n\t\t\t}\n\t\t}\n\t\tthis._isSettingNewItems = undefined\n\n\t\tthis.waitingForRender = true\n\n\t\t// Store previous `state`.\n\t\tthis.previousState = this.getState()\n\n\t\t// If it's the first call to `this.updateState()` then initialize\n\t\t// the most recent `setState()` value to be the current state.\n\t\tif (!this.mostRecentSetStateValue) {\n\t\t\tthis.mostRecentSetStateValue = this.getState()\n\t\t}\n\n\t\t// Accumulates all \"pending\" state updates until they have been applied.\n\t\tthis.mostRecentSetStateValue = {\n\t\t\t...this.mostRecentSetStateValue,\n\t\t\t...stateUpdate\n\t\t}\n\n\t\t// Update `state`.\n\t\tthis._setState(this.mostRecentSetStateValue, stateUpdate)\n\t}\n\n\tthis.getInitialState = () => {\n\t\tif (initialState) {\n\t\t\treturn getRestoredState.call(this, initialState)\n\t\t}\n\t\treturn getInitialStateFromScratch.call(this, { getInitialItemState })\n\t}\n\n\tthis.useState = ({\n\t\tgetState,\n\t\tsetState,\n\t\tupdateState\n\t}) => {\n\t\tif (this._isActive) {\n\t\t\tthrow new Error('[virtual-scroller] `VirtualScroller` has already been started')\n\t\t}\n\n\t\tif (this._getState) {\n\t\t\tthrow new Error('[virtual-scroller] Custom state storage has already been configured')\n\t\t}\n\n\t\tif (render) {\n\t\t\tthrow new Error('[virtual-scroller] Creating a `VirtualScroller` class instance with a `render()` parameter implies using the default (internal) state storage')\n\t\t}\n\n\t\tif (setState && updateState) {\n\t\t\tthrow new Error('[virtual-scroller] When using a custom state storage, one must supply either `setState()` or `updateState()` function but not both')\n\t\t}\n\n\t\tif (!getState || !(setState || updateState)) {\n\t\t\tthrow new Error('[virtual-scroller] When using a custom state storage, one must supply both `getState()` and `setState()`/`updateState()` functions')\n\t\t}\n\n\t\tthis._usesCustomStateStorage = true\n\n\t\tthis._getState = getState\n\n\t\tthis._setState = (newState, stateUpdate) => {\n\t\t\tif (setState) {\n\t\t\t\tsetState(newState)\n\t\t\t} else {\n\t\t\t\tupdateState(stateUpdate)\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.useDefaultStateStorage = () => {\n\t\tif (!render) {\n\t\t\tthrow new Error('[virtual-scroller] When using the default (internal) state management, one must supply a `render(state, prevState)` function parameter')\n\t\t}\n\n\t\t// Create default `getState()`/`setState()` functions.\n\t\tthis._getState = defaultGetState.bind(this)\n\t\tthis._setState = defaultSetState.bind(this)\n\n\t\t// When `state` is stored externally, a developer is responsible for\n\t\t// initializing it with the initial value.\n\t\t// Otherwise, if default state management is used, set the initial state now.\n\t\tconst setInitialState = defaultSetInitialState.bind(this)\n\t\tsetInitialState(this.getInitialState())\n\t}\n\n\tfunction defaultGetState() {\n\t\treturn this.state\n\t}\n\n\tfunction defaultSetInitialState(newState) {\n\t\tthis.state = newState\n\t}\n\n\tfunction defaultSetState(newState, stateUpdate) {\n\t\t// // Because the default state updates are \"synchronous\" (immediate),\n\t\t// // the `...stateUpdate` could be applied over `...this.state`,\n\t\t// // and no state updates would be lost.\n\t\t// // But if it was \"asynchronous\" (not immediate), then `...this.state`\n\t\t// // wouldn't work in all cases, because it could be stale in cases\n\t\t// // when more than a single `setState()` call is made before\n\t\t// // the state actually updates, making some properties of `this.state` stale.\n\t\t// this.state = {\n\t\t// \t...this.state,\n\t\t// \t...stateUpdate\n\t\t// }\n\n\t\tthis.state = newState\n\n\t\trender(this.state, this.previousState)\n\n\t\tthis.onRender()\n\t}\n\n\t/**\n\t * Returns the initial state of the `VirtualScroller` \"from scratch\".\n\t * (i.e. not from a previously saved one).\n\t * @param {function} [options.getInitialItemState] â€” Gets initial item state.\n\t * @return {object}\n\t */\n\tfunction getInitialStateFromScratch({ getInitialItemState }) {\n\t\tconst items = initialItems\n\n\t\tconst state = {\n\t\t\t...getInitialLayoutState.call(this, items, { beforeStart: true }),\n\t\t\titems,\n\t\t\titemStates: fillArray(new Array(items.length), (i) => getInitialItemState(items[i]))\n\t\t}\n\n\t\tif (isDebug()) {\n\t\t\tlog('Initial state (autogenerated)', getStateSnapshot(state))\n\t\t}\n\t\tlog('First shown item index', state.firstShownItemIndex)\n\t\tlog('Last shown item index', state.lastShownItemIndex)\n\n\t\treturn state\n\t}\n\n\tfunction getRestoredState(state) {\n\t\tif (isDebug()) {\n\t\t\tlog('Restore state', getStateSnapshot(state))\n\t\t}\n\n\t\t// Possibly clean up \"before resize\" property in state.\n\t\t// \"Before resize\" state property is cleaned up when all \"before resize\" item heights\n\t\t// have been re-measured in an asynchronous `this.updateState({ beforeResize: undefined })` call.\n\t\t// If `VirtualScroller` state was snapshotted externally before that `this.updateState()` call\n\t\t// has been applied, then \"before resize\" property might have not been cleaned up properly.\n\t\tstate = cleanUpBeforeResizeState(state)\n\n\t\t// Reset `verticalSpacing` so that it re-measures it after the list\n\t\t// has been rendered initially. The rationale is that a previously captured\n\t\t// inter-item vertical spacing can't be \"trusted\" in a sense that the user\n\t\t// might have resized the window after the previous `state` has been snapshotted.\n\t\t// If the user has resized the window, then changing window width might have\n\t\t// activated different CSS `@media()` \"queries\" resulting in a potentially different\n\t\t// vertical spacing when the `VirtualScroller` is re-created with such previously\n\t\t// snapshotted state.\n\t\tstate = {\n\t\t\t...state,\n\t\t\tverticalSpacing: undefined\n\t\t}\n\n\t\t// `this.verticalSpacing` acts as a \"true\" source for vertical spacing value.\n\t\t// Vertical spacing is also stored in `state` but `state` updates could be\n\t\t// \"asynchronous\" (not applied immediately) and `this.onUpdateShownItemIndexes()`\n\t\t// requires vertical spacing to be correct at any time, without any delays.\n\t\t// So, vertical spacing is also duplicated in `state`, but the \"true\" source\n\t\t// is still `this.verticalSpacing`.\n\t\t//\n\t\t// `this.verticalSpacing` must be initialized before calling `this.getInitialStateFromScratch()`\n\t\t// because `this.getInitialStateFromScratch()` uses `this.verticalSpacing` in its calculations.\n\t\t//\n\t\t// With the code above, `state.verticalSpacing` is always gonna be `undefined`,\n\t\t// so commented out this code. It's safer to just re-measure vertical spacing\n\t\t// from scratch when `VirtualScroller` is mounted.\n\t\t//\n\t\t// this.verticalSpacing = state ? state.verticalSpacing : undefined\n\n\t\t// Check if the actual `columnsCount` on the screen matches the one from state.\n\t\tif (isStateColumnsCountMismatch(state, {\n\t\t\tcolumnsCount: this.getActualColumnsCount()\n\t\t})) {\n\t\t\twarn('Reset Layout')\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\t...getInitialLayoutState.call(this, state.items, { beforeStart: false })\n\t\t\t}\n\t\t}\n\n\t\treturn state\n\t}\n\n\tfunction getInitialLayoutState(items, { beforeStart }) {\n\t\tconst itemsCount = items.length\n\n\t\tconst getColumnsCount = () => this.getActualColumnsCount()\n\n\t\tconst columnsCount = beforeStart\n\t\t\t? this.layout.getInitialLayoutValueWithFallback(\n\t\t\t\t'columnsCount',\n\t\t\t\tgetColumnsCount,\n\t\t\t\t1\n\t\t\t)\n\t\t\t: getColumnsCount()\n\n\t\tconst {\n\t\t\tfirstShownItemIndex,\n\t\t\tlastShownItemIndex,\n\t\t\tbeforeItemsHeight,\n\t\t\tafterItemsHeight\n\t\t} = this.layout.getInitialLayoutValues({\n\t\t\titemsCount,\n\t\t\tcolumnsCount: this.getActualColumnsCount(),\n\t\t\tbeforeStart\n\t\t})\n\n\t\tconst itemHeights = new Array(itemsCount)\n\n\t\t// Optionally preload items to be rendered.\n\t\tthis.onBeforeShowItems(\n\t\t\titems,\n\t\t\titemHeights,\n\t\t\tfirstShownItemIndex,\n\t\t\tlastShownItemIndex\n\t\t)\n\n\t\treturn {\n\t\t\titemHeights,\n\t\t\tcolumnsCount: this.getActualColumnsCountForState(),\n\t\t\tverticalSpacing: this.verticalSpacing,\n\t\t\tfirstShownItemIndex,\n\t\t\tlastShownItemIndex,\n\t\t\tbeforeItemsHeight,\n\t\t\tafterItemsHeight\n\t\t}\n\t}\n\n\t// Checks if the actual `columnsCount` on the screen matches the one from state.\n\t//\n\t// For example, a developer might snapshot `VirtualScroller` state\n\t// when the user navigates from the page containing the list\n\t// in order to later restore the list's state when the user goes \"Back\".\n\t// But, the user might have also resized the window while being on that\n\t// \"other\" page, and when they come \"Back\", their snapshotted state\n\t// no longer qualifies. Well, it does qualify, but only partially.\n\t// For example, `itemStates` are still valid, but first and last shown\n\t// item indexes aren't.\n\t//\n\tfunction isStateColumnsCountMismatch(state, { columnsCount }) {\n\t\tconst stateColumnsCount = state.columnsCount || 1\n\t\tif (stateColumnsCount !== columnsCount) {\n\t\t\twarn('~ Columns Count changed from', stateColumnsCount, 'to', columnsCount, '~')\n\t\t\treturn true\n\t\t}\n\t\tconst firstShownItemIndex = Math.floor(state.firstShownItemIndex / columnsCount) * columnsCount\n\t\tif (firstShownItemIndex !== state.firstShownItemIndex) {\n\t\t\twarn('~ First Shown Item Index', state.firstShownItemIndex, 'is not divisible by Columns Count', columnsCount, '~')\n\t\t\treturn true\n\t\t}\n\t}\n}"],"mappings":"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"}